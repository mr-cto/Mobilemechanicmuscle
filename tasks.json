[
  {
    "id": "1.0",
    "name": "Database Setup",
    "description": "Set up PostgreSQL database and integrate Drizzle ORM.",
    "category": "Half-Day 1.0: Database setup (Postgres, Drizzle)",
    "status": "complete",
    "subtasks": [
      {
        "id": "1.1",
        "name": "Install PostgreSQL and Drizzle ORM packages",
        "description": "Run `pnpm add @vercel/postgres drizzle-orm`.",
        "status": "complete"
      },
      {
        "id": "1.2",
        "name": "Configure Drizzle ORM for PostgreSQL",
        "description": "Set up database connection and schema definitions.",
        "status": "complete"
      },
      {
        "id": "1.3",
        "name": "Create initial database migrations",
        "description": "Define tables for users, vehicles, services, and bookings.",
        "status": "complete"
      }
    ]
  },
  {
    "id": "2.0",
    "name": "Authentication System",
    "description": "Implement user authentication using NextAuth.js.",
    "category": "Half-Day 1.0: Authentication (NextAuth.js)",
    "status": "complete",
    "subtasks": [
      {
        "id": "2.1",
        "name": "Install NextAuth.js package",
        "description": "Run `pnpm add next-auth@beta`.",
        "status": "complete"
      },
      {
        "id": "2.2",
        "name": "Configure NextAuth.js providers and callbacks",
        "description": "Set up authentication providers (e.g., credentials) and integrate with database.",
        "status": "complete"
      },
      {
        "id": "2.3",
        "name": "Create /account/login page",
        "description": "Develop the user login form.",
        "status": "complete"
      },
      {
        "id": "2.4",
        "name": "Create /account/signup page",
        "description": "Develop the user registration form.",
        "status": "complete"
      }
    ]
  },
  {
    "id": "3.0",
    "name": "User Account Features",
    "description": "Develop user-specific dashboard and vehicle management.",
    "category": "Half-Day 1.0: User Account features (dashboard, vehicle mgmt)",
    "status": "complete",
    "subtasks": [
      {
        "id": "3.1",
        "name": "Create /account/dashboard page",
        "description": "Develop the user dashboard to view upcoming appointments and service history.",
        "status": "complete"
      },
      {
        "id": "3.2",
        "name": "Implement vehicle management functionality",
        "description": "Allow users to add, edit, and remove their vehicles.",
        "status": "complete"
      }
    ]
  },
  {
    "id": "4.0",
    "name": "Online Booking System",
    "description": "Implement multi-step booking form and backend logic.",
    "category": "Half-Day 1.0: Online Booking System (frontend & backend)",
    "status": "complete",
    "subtasks": [
      {
        "id": "4.1",
        "name": "Install date-fns package",
        "description": "Run `pnpm add date-fns`.",
        "status": "complete"
      },
      {
        "id": "4.2",
        "name": "Create /book page",
        "description": "Develop the multi-step booking form for service selection, date/time, and vehicle details.",
        "status": "complete"
      },
      {
        "id": "4.3",
        "name": "Implement backend API for booking creation",
        "description": "Create API endpoints to handle booking submissions and save to database.",
        "status": "complete"
      }
    ]
  },
  {
    "id": "5.0",
    "name": "Detailed Service Catalog",
    "description": "Enhance the services page with detailed service cards.",
    "category": "Half-Day 0.5: Detailed Service Catalog",
    "status": "complete",
    "subtasks": [
      {
        "id": "5.1",
        "name": "Update /services page",
        "description": "Modify the services page to display detailed service cards with descriptions, estimated pricing, and 'Book Now' buttons.",
        "status": "complete"
      }
    ]
  },
  {
    "id": "6.0",
    "name": "Basic Admin Dashboard",
    "description": "Develop a simple admin interface for managing bookings.",
    "category": "Half-Day 0.5: Basic Admin Dashboard",
    "status": "complete",
    "subtasks": [
      {
        "id": "6.1",
        "name": "Create /admin/dashboard page",
        "description": "Develop a basic admin view to list all bookings.",
        "status": "complete"
      },
      {
        "id": "6.2",
        "name": "Implement booking status update functionality",
        "description": "Allow admin to change booking status (e.g., pending, confirmed, completed).",
        "status": "complete"
      }
    ]
  },
  {
    "id": "7.0",
    "name": "Integration & QA",
    "description": "Integrate all new features and perform quality assurance.",
    "category": "Half-Day 1.0: Integration & QA",
    "status": "complete",
    "subtasks": [
      {
        "id": "7.1",
        "name": "Integrate new features with existing MVP",
        "description": "Ensure seamless functionality between old and new components.",
        "status": "complete"
      },
      {
        "id": "7.2",
        "name": "Perform comprehensive QA",
        "description": "Test all new features for responsiveness, functionality, and user experience.",
        "status": "complete"
      }
    ]
  }
]
