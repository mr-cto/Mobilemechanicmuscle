# Task ID: 4
# Title: Service Catalog Implementation
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: Create a detailed service catalog page with service descriptions, pricing estimates, and 'Book Now' buttons
# Details:
1. Design and implement service cards with detailed information
2. Create database seed script for initial service offerings
3. Implement filtering/categorization of services
4. Add 'Book Now' buttons that link to the booking form
5. Include estimated pricing and service duration

Example service catalog implementation:
```tsx
// app/services/page.tsx
import { db } from '@/db';
import { services } from '@/db/schema';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardFooter, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';

export default async function ServicesPage() {
  const allServices = await db.query.services.findMany();
  
  // Group services by category if needed
  const servicesByCategory = allServices.reduce((acc, service) => {
    const category = service.category || 'General';
    if (!acc[category]) acc[category] = [];
    acc[category].push(service);
    return acc;
  }, {});
  
  return (
    <div className="container mx-auto py-8">
      <h1 className="text-3xl font-bold mb-6">Our Services</h1>
      
      {Object.entries(servicesByCategory).map(([category, services]) => (
        <section key={category} className="mb-12">
          <h2 className="text-2xl font-semibold mb-4">{category}</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {services.map((service) => (
              <Card key={service.id} className="h-full flex flex-col">
                <CardHeader>
                  <CardTitle>{service.name}</CardTitle>
                </CardHeader>
                <CardContent className="flex-grow">
                  <CardDescription>{service.description}</CardDescription>
                  <div className="mt-4">
                    <p className="font-semibold">Estimated Price: ${service.estimatedPrice}</p>
                    <p>Duration: {service.duration} minutes</p>
                  </div>
                </CardContent>
                <CardFooter>
                  <Button asChild className="w-full">
                    <Link href={`/book?service=${service.id}`}>Book Now</Link>
                  </Button>
                </CardFooter>
              </Card>
            ))}
          </div>
        </section>
      ))}
    </div>
  );
}
```

Example seed data:
```typescript
// db/seed.ts
import { db } from './index';
import { services } from './schema';

async function seed() {
  await db.insert(services).values([
    {
      name: 'Oil Change',
      description: 'Full synthetic oil change with filter replacement',
      estimatedPrice: 89.99,
      duration: 45,
      category: 'Maintenance'
    },
    {
      name: 'Brake Pad Replacement',
      description: 'Front or rear brake pad replacement with inspection',
      estimatedPrice: 149.99,
      duration: 90,
      category: 'Repairs'
    },
    // Add more services
  ]);
  
  console.log('Seed data inserted');
}

seed().catch(console.error);
```

# Test Strategy:
1. Verify all services display correctly with proper information
2. Test filtering/categorization functionality
3. Ensure 'Book Now' buttons link to the correct booking form with pre-selected service
4. Test responsive design of service cards
5. Verify data loading states and error handling
